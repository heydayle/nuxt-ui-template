/**
 * Generated by orval v6.28.2 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  faker,
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http,
} from 'msw'
import type {
  AppResponseListCrawlSiteDto,
} from '../../models'

export const getGetListCrawlSiteResponseMock = (overrideResponse: any = {}): AppResponseListCrawlSiteDto => ({ DATA: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ CODE: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), OCR: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), SITE_NAME: faker.helpers.arrayElement([faker.word.sample(), undefined]), TRANSLATE: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), URL: faker.helpers.arrayElement([faker.word.sample(), undefined]), VERSION: faker.helpers.arrayElement([faker.word.sample(), undefined]), ...overrideResponse })), undefined]), ERR_CODE: faker.helpers.arrayElement([faker.word.sample(), undefined]), REASON: faker.helpers.arrayElement([faker.word.sample(), undefined]), RESULT: faker.helpers.arrayElement([faker.word.sample(), undefined]), ...overrideResponse })

export function getGetListCrawlSiteMockHandler(overrideResponse?: AppResponseListCrawlSiteDto) {
  return http.get('*/api-v2/work/crawl', async () => {
    await delay(1000)
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined ? overrideResponse : getGetListCrawlSiteResponseMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    })
  })
}
export function getCrawlControllerMock() {
  return [
    getGetListCrawlSiteMockHandler(),
  ]
}
