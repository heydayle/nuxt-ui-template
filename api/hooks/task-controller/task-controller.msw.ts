/**
 * Generated by orval v6.28.2 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  faker,
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http,
} from 'msw'
import type {
  AppResponseTaskResItem,
} from '../../models'

export const getGetTasksResponseMock = (overrideResponse: any = {}): AppResponseTaskResItem => ({ DATA: faker.helpers.arrayElement([{ CODE: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), MESSAGE: faker.helpers.arrayElement([faker.word.sample(), undefined]), STATUS: faker.helpers.arrayElement([faker.word.sample(), undefined]), TASK_ID: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), ...overrideResponse }, undefined]), ERR_CODE: faker.helpers.arrayElement([faker.word.sample(), undefined]), REASON: faker.helpers.arrayElement([faker.word.sample(), undefined]), RESULT: faker.helpers.arrayElement([faker.word.sample(), undefined]), ...overrideResponse })

export function getGetTasksMockHandler(overrideResponse?: AppResponseTaskResItem) {
  return http.get('*/api-v2/work/tasks/:id', async () => {
    await delay(1000)
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined ? overrideResponse : getGetTasksResponseMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    })
  })
}
export function getTaskControllerMock() {
  return [
    getGetTasksMockHandler(),
  ]
}
