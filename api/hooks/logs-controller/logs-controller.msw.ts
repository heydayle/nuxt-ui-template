/**
 * Generated by orval v6.28.2 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  HttpResponse,
  delay,
  http,
} from 'msw'
import type {
  GetActionLogs200,
  GetLoginLogs200,
} from '../../models'

export const getGetLoginLogsResponseMock = (): GetLoginLogs200 => ({})

export const getGetActionLogsResponseMock = (): GetActionLogs200 => ({})

export function getGetLoginLogsMockHandler(overrideResponse?: GetLoginLogs200) {
  return http.post('*/api-v1/work/logs/login', async () => {
    await delay(1000)
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined ? overrideResponse : getGetLoginLogsResponseMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    })
  })
}

export function getGetActionLogsMockHandler(overrideResponse?: GetActionLogs200) {
  return http.post('*/api-v1/work/logs/action', async () => {
    await delay(1000)
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined ? overrideResponse : getGetActionLogsResponseMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    })
  })
}
export function getLogsControllerMock() {
  return [
    getGetLoginLogsMockHandler(),
    getGetActionLogsMockHandler(),
  ]
}
